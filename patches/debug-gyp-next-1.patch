diff --git a/pylib/gyp/input.py b/pylib/gyp/input.py
index ca7ce44e..b179714c 100644
--- a/pylib/gyp/input.py
+++ b/pylib/gyp/input.py
@@ -814,6 +814,8 @@ def ExpandVariables(input, phase, variables, build_file):
         # Find the ending paren, and re-evaluate the contained string.
         (c_start, c_end) = FindEnclosingBracketGroup(input_str[replace_start:])
 
+        print(":: [hoge] replace_start: {}, end: {}, end2: {}\n| c_start: {}, end: {}\n| input_str: {}\n| match: {}".format(replace_start, replace_end, replace_start + c_end, c_start, c_end, input_str, match))
+
         # Adjust the replacement range to match the entire command
         # found by FindEnclosingBracketGroup (since the variable_re
         # probably doesn't match the entire command if it contained
@@ -829,6 +831,8 @@ def ExpandVariables(input, phase, variables, build_file):
         contents_end = replace_end - 1
         contents = input_str[contents_start:contents_end]
 
+        print("| contents: {}, start: {}, end: {}".format(contents, contents_start, contents_end))
+
         # Do filter substitution now for <|().
         # Admittedly, this is different than the evaluation order in other
         # contexts. However, since filtration has no chance to run on <|(),
@@ -1077,6 +1081,7 @@ def ExpandVariables(input, phase, variables, build_file):
             output = (
                 output[:replace_start] + str(encoded_replacement) + output[replace_end:]
             )
+        print("| input_str: {}\nL output: {}".format(input_str, output))
         # Prepare for the next match iteration.
         input_str = output
 
